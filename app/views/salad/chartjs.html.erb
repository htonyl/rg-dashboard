<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Chart.js</h2>
        <ol class="breadcrumb">
            <li>
                <a href="<%= url_for :controller => 'dashboards', :action => 'dashboard_1' %>">Home</a>
        </li>
        <li>
            <a>Graphs</a>
        </li>
        <li class="active">
            <strong>Chart</strong>
        </li>
    </ol>
</div>
<div class="col-lg-2">

</div>
        </div>
<div ng-app="app" class="wrapper wrapper-content animated fadeInRight">
<div class="row" ng-controller="frequencyController">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>{{usage}} of Product Usage</h5>
            </div>
            <div class="ibox-content">
                <div>
                    <canvas id="freqBarChart"></canvas>
                </div>
            </div>
            <div class="m-t-md">
                <small class="pull-right">
                    <i class="fa fa-clock-o"> </i>
                    Update on 16.07.2015
                </small>
                <small>
                    <strong>Analysis of sales:</strong> The value has been changed over time, and last month reached a level over $50,000.
                </small>
            </div>
        </div>

    </div>
</div>
    <div class="row" ng-controller="durationController">
      <div class="col-lg-12">
          <div class="ibox float-e-margins">
              <div class="ibox-title">
                  <h5>{{usage}} of Product Usage</h5>
              </div>
              <div class="ibox-content">
                  <div>
                      <canvas id="durationBarChart"></canvas>
                  </div>
              </div>
          </div>
      </div>
    </div>
</div>


<% content_for :javascript do %>

<script type="text/javascript">
function getBarData(labels, data){
  // run multiple datasets
  return {
      labels: labels,
      datasets: [
          {
              label: "My First dataset",
              fillColor: "rgba(220,220,220,0.5)",
              strokeColor: "rgba(220,220,220,0.8)",
              highlightFill: "rgba(220,220,220,0.75)",
              highlightStroke: "rgba(220,220,220,1)",
              data: data
          }
      ]
  };
}
function getBarOptions(){
  return {
      scaleBeginAtZero: true,
      scaleShowGridLines: true,
      scaleGridLineColor: "rgba(0,0,0,.05)",
      scaleGridLineWidth: 1,
      barShowStroke: true,
      barStrokeWidth: 2,
      barValueSpacing: 5,
      barDatasetSpacing: 1,
      responsive: true,
  };
}
function convertDayToWeek(day){
  return day % 7 + "";
}
function convertTimeToWeek(){

}
function formatFreqX(arg){
  return arg + " Days";
}
function formatDurationX(arg){
  return arg + " Hours";
}
function countDuration(data, start, end){
  var userToDuration = Array(24).fill(0),
      base = Object.keys(data).length;
  for (var userID in data){
    var freqInSpan = 0, durationInSpan = 0;
    for (var week in data[userID]){
      if(week >= start && week <= end){
        freqInSpan+=data[userID][week].freq;
        durationInSpan+=data[userID][week].duration;
      }
    }
    if(!durationInSpan) base--; // zero duration is not counted
    userToDuration[Math.round(durationInSpan/freqInSpan)]++;
  }
  return userToDuration.map(function(userCount){
    return userCount / base;
  });
}
function getCumulative(data){
  var sum = 0;
  var cumulative = data.map(function(val){
    return 1 - (sum+=val);
  });
  cumulative.unshift(1);
  cumulative.pop();
  return cumulative;
}
function countFreq(data, start, end){
  var userToFreq = Array((end-start+1)*7).fill(0);
  var base = Object.keys(data).length;
  for (var userID in data){
    var freqInSpan = 0;
    for (var week in data[userID]){
      if(week >= start && week <= end)
        freqInSpan+=data[userID][week].freq;
    }
    userToFreq[freqInSpan]++;
  }
  return userToFreq.map(function(userCount){
    return userCount / base;
  });
}
// {'_userID_':{'_week_':{duration: 3, freq: 1}}}
function toWeeks(data){
  var weekList = {};
  for (var userID in data){
    if (!data.hasOwnProperty(userID)) continue; // skip loop if the property is from prototype

    var _user = weekList[userID] = {};
    data[userID].forEach(function(record){
      var week = Math.floor(record.day/7);
      if(week in _user){
        _user[week].freq++;
        _user[week].duration+=record.time.length;
      }else{
        _user[week] = {freq: 1, duration: record.time.length};
      }
    });
  }
  return weekList;
}
$(function() {
  var app = angular.module('app', []);
  var raw = {
    '0':[
      {'day':1,'time':[14,15,16,18]},
      {'day':2,'time':[12]},
      {'day':20,'time':[11,13,15,17,19,21]},
      {'day':21,'time':[12,13]}],
    '1':[
      {'day':1,'time':[13,15]},
      {'day':3,'time':[12,13]},
      {'day':14,'time':[13,15]},
      {'day':19,'time':[1,13]}],
    '3':[
      {'day':1,'time':[9,10,11,13,15]},
      {'day':7,'time':[13,15]},
      {'day':11,'time':[12]}],
    '7':[
      {'day':1,'time':[9,10,11,13,15]},
      {'day':7,'time':[13,15]},
      {'day':11,'time':[12]}],
    '102':[
      {'day':1,'time':[9,10,11,13,15]},
      {'day':8,'time':[13,15]},
      {'day':11,'time':[12]}],
      '111':[{'day':1,'time':[9,10,11,13,15]}],
      '131':[{'day':1,'time':[9,10,11,13,15]}],
      '121':[{'day':1,'time':[9,10,11,13,15]}],
      '111':[],'112':[],'113':[],
    };
  var weekList = toWeeks(raw);
  console.log(weekList);
  app.controller('frequencyController', ['$scope', function($scope) {
    $scope.usage = 'Frequency';
    var start = 0,
        end = 3,
        cumulative = false;
    var freq = countFreq(weekList, start, end),
        data = cumulative ? getCumulative(freq) : freq;
    console.log(data);
    for(var i = 0, label=[]; i<=(end-start)*7; i++)
      label.push(formatFreqX(i));
    var freqBarChart = new Chart(document.getElementById("freqBarChart").getContext("2d"))
          .Bar(
            getBarData(label, data),
            getBarOptions());
  }]);
  app.controller('durationController', ['$scope', function($scope) {
    $scope.usage = 'Duration';
    var start = 0,
        end = 3,
        cumulative = true;
    var duration = countDuration(weekList, start, end),
        data = cumulative ? getCumulative(duration) : duration;
    console.log(data);
    for(var i = 0, label=[]; i<=24; i++)
      label.push(formatDurationX(i));
    var durationBarChart = new Chart(document.getElementById("durationBarChart").getContext("2d"))
          .Bar(
            getBarData(label, data),
            getBarOptions());
  }]);
});

</script>

<% end %>
